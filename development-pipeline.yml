# PHP
# Test your PHP project.
# Add steps that run tests, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/php

trigger:
- development

pool:
  vmImage: 'ubuntu-latest'

variables:
  phpVersion: 7.3

steps:
- script: |
    sudo update-alternatives --set php /usr/bin/php$(phpVersion)
    sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
    sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
    sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
    sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
    php -version
  displayName: 'Use PHP version $(phpVersion)'

- script: composer install --no-interaction --prefer-dist
  displayName: 'composer install'

##- script: |
##    php artisan key:generate
##    php artisan migrate
##  displayName: 'Running Migrations'

- script: |
    sudo npm i -g npm
    sudo chown -R vsts:vsts ~/.npm
    sudo chown -R vsts:vsts ~/.config
    npm install
    npm run prod
    node -v
  displayName: 'Generating build assets'

- script: |
    screen -d -m google-chrome-stable --headless --disable-gpu --disable-dev-shm-usage --disable-software-rasterizer --remote-debugging-port=9222 http://localhost &
    screen -d -m php artisan serve &
  displayName: 'Starting Chrome and the Web Server'

- script: |
    vendor/bin/phpunit --log-junit tests/Results/TEST-phpunit-junit.xml
  displayName: 'Running Unit Tests'
  
##- script: |
##    php artisan dusk --log-junit tests/Results/TEST-dusk-junit.xml
##  displayName: 'Running Browser Tests'

  # Publish Test Results to Azure Pipelines/TFS
- task: PublishTestResults@2
  inputs:
    testRunner: 'JUnit' # Options: JUnit, NUnit, VSTest, xUnit
    testResultsFiles: '**/TEST-*.xml'
    searchFolder: '$(System.DefaultWorkingDirectory)/tests/Results' # Optional
    mergeTestResults: false # Optional
    #testRunTitle: # Optional
    #buildPlatform: # Optional
    #buildConfiguration: # Optional
    #publishRunAttachments: true # Optional
  condition: always()

# Delete .env
- task: DeleteFiles@1
  inputs:
    Contents: '.env'
  displayName: 'Deleting .env'